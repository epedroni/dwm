#!/usr/bin/env bash
#
# Status bar for dwm. Adapted from:
# https://github.com/w0ng/bin/blob/master/dwm-statusbar

# Colour codes from dwm/config.h
colour_faded="\x01" # grey on black
colour_neutral="\x02" # blue on black
colour_warning="\x03" # yellow on black
colour_critical="\x04" # red on black
colour_normal="\x05" # grey on black

# Icon glyphs from font xbmicons.pcf
space="  "

print_date() {
  echo -ne "${colour_normal}$(date "+%d/%m/%y")"
}

print_time() {
  time_local="$(date "+%H:%M")"
  time_us="$(TZ='US/Central' date "+%H:%M")"

  echo -ne "${colour_neutral}\uE3D2${colour_normal}${time_local}${colour_faded}${time_us}"
}

print_volume() {
  # empty E022, low E023, full E024, mid E03B
  volume=$(amixer get Master | tail -n1 | sed -r 's/.*\[(.*)%\].*/\1/')
  mute="$(amixer get Master | tail -n1 | sed -r 's/.*\[(on|off)\].*/\1/')"
  
  if [ "$mute" == "off" ]; then
    vol_colour=$colour_warning
    icon_colour=$colour_warning
    icon="\uE022"
  else
    vol_colour=$colour_normal
    icon_colour=$colour_neutral
    if [ $volume -eq 0 ]; then
      icon="\uE022"
    elif [ $volume -lt 33 ]; then
      icon="\uE023"
    elif [ $volume -lt 66 ]; then
      icon="\uE03B"
    else
      icon="\uE024"
    fi
  fi
  
  echo -ne "${icon_colour}${icon}${vol_colour}${volume}%"
}

print_sda1_free() {
  # floppy E0C3 
  sda1_free=$(df -kh / | awk 'NR==2 {print $4}')
  sda1_percent=$(df -kh / | awk 'NR==2 {print $5}' | sed 's/%//g')
  
  if [ $sda1_percent -gt 90 ]; then
    icon_colour=$colour_critical
    sda1_colour=$colour_critical
  elif [ $sda1_percent -gt 75 ]; then
    icon_colour=$colour_warning
    sda1_colour=$colour_warning
  else
    icon_colour=$colour_neutral
    sda1_colour=$colour_normal
  fi
  
  echo -ne "${icon_colour}\uE0C3${sda1_colour}${sda1_free}"
}

print_mem_free() {
  mem_free="$(free -m | awk 'NR==2 {print $7}')"
  
  mem_colour=$colour_normal
  icon_colour=$colour_neutral
  if [ $mem_free -lt 250 ]; then
    mem_colour=$colour_critical
    icon_colour=$colour_critical
  elif [ $mem_free -lt 500 ]; then
    mem_colour=$colour_warning
    icon_colour=$colour_warning
  fi
  
  echo -ne "${icon_colour}\uE28B${mem_colour}${mem_free}M"
}

print_cpu_temp() {
  cpu_temp=$(sensors -u | awk '/Core 0/ {getline; print $2}' | sed -r 's/([0-9]*)\.[0-9]*/\1/')
  
  temp_colour=$colour_normal
  icon_colour=$colour_neutral
  if [ $cpu_temp -gt 83 ]; then
    temp_colour=$colour_critical
    icon_colour=$colour_critical
  elif [ $cpu_temp -gt 99 ]; then
    temp_colour=$colour_warning
    icon_colour=$colour_warning
  fi
  
  echo -ne "${icon_colour}\uE3B2${temp_colour}${cpu_temp}Â°"
}

# cpu (from: https://bbs.archlinux.org/viewtopic.php?pid=661641#p661641)
print_cpu_used() {
  echo -ne "${colour_neutral}\uE3AF${colour_normal}${cpu_used}%"
}

print_eth() {
  eth_status=$(ip addr show dev enp4s0 | awk 'NR==1 {print $9}')
  
  if [ "$eth_status" == "UP" ]; then
    eth_ip=$(ip addr show dev enp4s0 | awk 'NR==3 {print $2}' | sed -r 's/\/.*//')
    icon_colour=${colour_neutral}
    eth_colour=${colour_normal}
  else
    icon_colour=${colour_faded}
  fi

  echo -ne "${icon_colour}\uE0E4${eth_colour}${eth_ip}"
}

while true; do
  # get new cpu idle and total usage
  eval $(awk '/^cpu /{print "cpu_idle_now=" $5 "; cpu_total_now=" $2+$3+$4+$5 }' /proc/stat)
  cpu_interval=$((cpu_total_now-${cpu_total_old:-0}))
  # calculate cpu usage (%)
  let cpu_used="100 * ($cpu_interval - ($cpu_idle_now-${cpu_idle_old:-0})) / $cpu_interval"

  # Pipe to status bar
  xsetroot -name "$(print_eth)${space}$(print_sda1_free)${space}$(print_cpu_used)${space}$(print_cpu_temp)${space}$(print_mem_free)${space}$(print_volume)${space}$(print_time)$(print_date)"

  # reset old rate
  cpu_idle_old=$cpu_idle_now
  cpu_total_old=$cpu_total_now
  
  # loop stats every 1 second
  sleep 1
done
